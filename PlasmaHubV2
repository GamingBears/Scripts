-- Also you can press ] to destroy/Delete the script ingame 

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Plasma Hub V2 | Fluent UI " .. Fluent.Version,
    SubTitle = "by bear",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "info" }),
    LocalPlayer = Window:AddTab({ Title = "Local Player", Icon = "user-cog" }),
    UniScripts = Window:AddTab({ Title = "Universal Scripts", Icon = "globe" }),
    ScriptHub = Window:AddTab({ Title = "Script Hub", Icon = "library" }),
    Test = Window:AddTab({ Title = "Test Tab", Icon = "wrench" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do

-- MAIN

    Tabs.Main:AddParagraph({
        Title = "dsc.gg/plasmahub",
        Content = "Be sure to join our discord server for help/suggestions! "
    })

    Tabs.Main:AddParagraph({
        Title = "Update log: Plasma V2 Release!",
        Content = "Very epic, log available in discord! /nYou should totally join if you haven't already"
    })

    local Keybind = Tabs.Main:AddKeybind("Keybind", {
    Title = "Destroy UI Press ]",
    Description = "Just in case you ever drag it off screen.",
    Mode = "Toggle", -- Always, Toggle, Hold
    Default = "RightBracket", -- String as the name of the keybind (MB1, MB2 for mouse buttons)

    -- Occurs when the keybind is clicked, Value is `true`/`false`
    Callback = function(Value)
        Fluent:Destroy()
    end,

    -- Occurs when the keybind itself is changed, `New` is a KeyCode Enum OR a UserInputType Enum
    ChangedCallback = function(New)
        print("Keybind changed!", New)
    end
})

-- LOCAL PLAYER

    Tabs.LocalPlayer:AddButton({
    Title = "Default Settings",
    Description = "Returns to the normal default walk and jump speeds (16, 50)",
    Callback = function()
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
        
    end
})

local Slider = Tabs.LocalPlayer:AddSlider("Slider", 
{
    Title = "Speed",
    Description = "Edit your users speed",
    Default = 16,
    Min = 1,
    Max = 300,
    Rounding = 0.75,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
    end
})

local Slider = Tabs.LocalPlayer:AddSlider("Slider", 
{
    Title = "Jump Power",
    Description = "Edit your users jump power",
    Default = 50,
    Min = 1,
    Max = 300,
    Rounding = 0.75,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
    end
})

local Section = Tabs.LocalPlayer:AddSection("Other Universal Local Player Scripts")
Section:AddParagraph({
        Title = "These are other modifications that can be made to the clients perspective "
})

local Input = Tabs.LocalPlayer:AddInput("Input", {
    Title = "Gravity",
    Description = "Edits Client's game gravity.",
    Default = "",
    Placeholder = "196.2 Default",
    Numeric = true, -- Only allows numbers
    Finished = true, -- Only calls callback when you press enter
    Callback = function(Value)
        workspace.Gravity = (Value)
    end
})

local Input = Tabs.LocalPlayer:AddInput("Input", {
    Title = "Clock Time",
    Description = "Edits Client's clock time. (0-24)",
    Default = "",
    Placeholder = "12 = Daytime",
    Numeric = true, -- Only allows numbers
    Finished = true, -- Only calls callback when you press enter
    Callback = function(Value)
        game.Lighting.ClockTime = (Value)
    end
})

    Tabs.LocalPlayer:AddButton({
    Title = "Infinite Jump",
    Description = "Press V to toggle",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/vp25QVYP'))()
    end
})

    Tabs.LocalPlayer:AddButton({
    Title = "Rejoin",
    Description = "Leaves and rejoins the current game you are in",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/PHAPvvxU'))()
    end
})

    Tabs.LocalPlayer:AddButton({
    Title = "Gravity Switch",
    Description = "Allows you to toggle workspace gravity, 0-192",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/syqWRnHC'))()
    end
})

    Tabs.LocalPlayer:AddButton({
    Title = "Click TP",
    Description = "Press Ctrl+LMB to use once pressed",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/vdLumqAq'))()
    end
})

    Tabs.LocalPlayer:AddButton({
    Title = "Fullbright",
    Description = "Removes all shadows and brightens your game",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/tePZ6ke3'))()
    end
})

    Tabs.LocalPlayer:AddButton({
    Title = "Btools",
    Description = "Gives you client sided Building tools from old Roblox",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/syqWRnHC'))()
    end
})

    Tabs.LocalPlayer:AddButton({
    Title = "Unlock Workspace",
    Description = "Gives you client sided Building tools from old Roblox",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/HeqXPvf4'))()
    end
})

    Tabs.LocalPlayer:AddButton({
    Title = "Anti AFK",
    Description = "Removes the kick after 20 minutes",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/kjB4evnt'))()
    end
})

    Tabs.LocalPlayer:AddButton({
    Title = "Focus Anti AFK",
    Description = "Game thinks you are still on the Roblox app while you can do other things",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/skQ1tvsL'))()
    end
})


-- UNIVERSAL



-- SCRIPT HUB



-- TEST TAB



-- SETTINGS

    Tabs.Settings:AddButton({
    Title = "Print Test",
    Description = "Prints text in the output",
    Callback = function()
        print("Execution working!")
    end
})

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Plasma Hub",
    Content = "The script has been loaded.",
    Duration = 5
})

Window:Dialog({
    Title = "Plasma Hub has loaded successfully",
    Content = "NOTICE: Never exploit on mains. There is always a chance that Roblox will update and send out another ban wave",
    Buttons = {
        { 
            Title = "Confirm",
            Callback = function()

            end 
        }, {
            Title = "Dismiss",
            Callback = function()

            end 
        }
    }
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
